{
  "version": 3,
  "file": "2_deploy_contracts.js",
  "sourceRoot": "",
  "sources": [
    "2_deploy_contracts.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,WAAA,EAAA,YAAA,EAAA,UAAA,EAAA;;EAAA,WAAA,GAAc,SAAS,CAAC,OAAV,CAAkB,aAAlB;;EACd,YAAA,GAAe,SAAS,CAAC,OAAV,CAAkB,cAAlB;;EACf,UAAA,GAAa,SAAS,CAAC,OAAV,CAAkB,YAAlB;;EAEb,MAAA,GAAS,OAAA,CAAQ,oCAAR;;EAET,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAAA;WACf,QAAQ,CAAC,MAAT,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB,CAA2C,CAAC,IAA5C,CACE,QAAA,CAAA,CAAA;aACE,QAAQ,CAAC,MAAT,CACE,WADF,EAEE,YAAY,CAAC,OAFf,EAGE,UAAU,CAAC,OAHb,EAIE,MAAM,CAAC,YAJT,EAKE,QAAS,CAAA,CAAA,CALX,EAME,CANF,EAOE,MAAM,CAAC,YAPT,EAQE,MAAM,CAAC,cART,EASE,MAAM,CAAC,sBATT,EAUE,MAAM,CAAC,kBAVT;IADF,CADF,CAcC,CAAC,IAdF,CAeE,QAAA,CAAA,CAAA;AACE,aAAO,YAAY,CAAC,QAAb,CAAA,CAAuB,CAAC,IAAxB,CACL,QAAA,CAAC,QAAD,CAAA;eACE,QAAQ,CAAC,iBAAT,CAA2B,WAAW,CAAC,OAAvC;MADF,CADK;IADT,CAfF,CAoBC,CAAC,IApBF,CAqBE,QAAA,CAAA,CAAA;AACE,aAAO,UAAU,CAAC,QAAX,CAAA,CAAqB,CAAC,IAAtB,CACL,QAAA,CAAC,QAAD,CAAA;eACE,QAAQ,CAAC,iBAAT,CAA2B,WAAW,CAAC,OAAvC;MADF,CADK;IADT,CArBF;EADe;AANjB",
  "sourcesContent": [
    "BetokenFund = artifacts.require \"BetokenFund\"\r\nControlToken = artifacts.require \"ControlToken\"\r\nShareToken = artifacts.require \"ShareToken\"\r\n\r\nconfig = require \"../deployment_configs/testnet.json\"\r\n\r\nmodule.exports = (deployer, network, accounts) ->\r\n  deployer.deploy([ControlToken, ShareToken]).then(\r\n    () ->\r\n      deployer.deploy(\r\n        BetokenFund,\r\n        ControlToken.address,\r\n        ShareToken.address,\r\n        config.kyberAddress,\r\n        accounts[0], #developerFeeAccount\r\n        0,\r\n        config.phaseLengths,\r\n        config.commissionRate,\r\n        config.developerFeeProportion,\r\n        config.functionCallReward\r\n      )\r\n  ).then(\r\n    () ->\r\n      return ControlToken.deployed().then(\r\n        (instance) ->\r\n          instance.transferOwnership(BetokenFund.address)\r\n      )\r\n  ).then(\r\n    () ->\r\n      return ShareToken.deployed().then(\r\n        (instance) ->\r\n          instance.transferOwnership(BetokenFund.address)\r\n      )\r\n  )\r\n\r\n"
  ]
}