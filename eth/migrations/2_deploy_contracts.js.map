{
  "version": 3,
  "file": "2_deploy_contracts.js",
  "sourceRoot": "",
  "sources": [
    "2_deploy_contracts.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;AAAA,MAAA,WAAA,EAAA,YAAA,EAAA;;EAAA,WAAA,GAAc,SAAS,CAAC,OAAV,CAAkB,aAAlB;;EACd,YAAA,GAAe,SAAS,CAAC,OAAV,CAAkB,cAAlB;;EACf,UAAA,GAAa,SAAS,CAAC,OAAV,CAAkB,YAAlB;;EAEb,MAAM,CAAC,OAAP,GAAiB,QAAA,CAAC,QAAD,EAAW,OAAX,EAAoB,QAApB,CAAA;WACf,QAAQ,CAAC,IAAT,CAAc,MAAA,QAAA,CAAA,CAAA;AACZ,UAAA,iBAAA,EAAA,SAAA,EAAA,OAAA,EAAA,gBAAA,EAAA,SAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,MAAA,EAAA,YAAA,EAAA,UAAA,EAAA,aAAA,EAAA;MAAA,IAAG,OAAA,KAAW,aAAX,IAA4B,OAAA,KAAW,SAA1C;;QAGE,MAAA,GAAS,OAAA,CAAQ,oCAAR;QACT,iBAAA,GAAoB;QACpB,gBAAA,GAAmB,SAAS,CAAC,OAAV,CAAkB,kBAAlB;QACnB,SAAA,GAAY,SAAS,CAAC,OAAV,CAAkB,WAAlB;QACZ,gBAAA,GAAmB,SAAS,CAAC,OAAV,CAAkB,kBAAlB,EAJnB;;QAOA,MAAM,QAAQ,CAAC,MAAT,CAAgB,gBAAhB;QACN,YAAA,GAAe,CAAA,MAAM,gBAAgB,CAAC,QAAjB,CAAA,CAAN,EARf;;QAWA,aAAA,GAAgB,CAAC,CAAA,MAAM,YAAY,CAAC,QAAb,CAAsB,YAAtB,EAAoC,KAApC,EAA2C,EAA3C,CAAN,CAAD,CAAsD,CAAC,IAAK,CAAA,CAAA,CAAE,CAAC,IAAI,CAAC;QACpF,WAAA,GAAc,CAAC,CAAA,MAAM,YAAY,CAAC,QAAb,CAAsB,iBAAtB,EAAyC,KAAzC,EAAgD,EAAhD,CAAN,CAAD,CAA2D,CAAC,IAAK,CAAA,CAAA,CAAE,CAAC,IAAI,CAAC;QACvF,OAAO,CAAC,GAAR,CAAY,sBAAA,GAAyB,aAArC;QACA,SAAA,GAAY,SAAS,CAAC,EAAV,CAAa,aAAb;QACZ,OAAA,GAAU,SAAS,CAAC,EAAV,CAAa,WAAb,EAfV;;QAkBA,MAAM,QAAQ,CAAC,MAAT,CAAgB,gBAAhB,EAAkC,CAAC,OAAO,CAAC,OAAT,EAAkB,iBAAlB,EAAqC,SAAS,CAAC,OAA/C,CAAlC,EAA2F,CAAC,CAAD,EAAI,GAAJ,EAAS,IAAT,CAA3F,EAlBN;;QAoBA,MAAM,SAAS,CAAC,IAAV,CAAe,gBAAgB,CAAC,OAAhC,EAAyC,IAAzC;QACN,MAAM,OAAO,CAAC,IAAR,CAAa,gBAAgB,CAAC,OAA9B,EAAuC,IAAvC,EArBN;;QAwBA,MAAM,QAAQ,CAAC,MAAT,CAAgB,CAAC,YAAD,EAAe,UAAf,CAAhB;QACN,MAAM,QAAQ,CAAC,MAAT,CACJ,WADI,EAEJ,YAAY,CAAC,OAFT,EAGJ,UAAU,CAAC,OAHP,EAIJ,gBAAgB,CAAC,OAJb,EAKJ,OAAO,CAAC,OALJ,EAMJ,QAAS,CAAA,CAAA,CANL,EAOJ,MAAM,CAAC,YAPH,EAQJ,MAAM,CAAC,cARH,EASJ,MAAM,CAAC,YATH,EAUJ,MAAM,CAAC,gBAVH,EAWJ,MAAM,CAAC,WAXH,EAYJ,MAAM,CAAC,kBAZH,EAaJ,KAbI;QAgBN,YAAA,GAAe,CAAA,MAAM,YAAY,CAAC,QAAb,CAAA,CAAN;QACf,UAAA,GAAa,CAAA,MAAM,UAAU,CAAC,QAAX,CAAA,CAAN;QACb,YAAY,CAAC,iBAAb,CAA+B,WAAW,CAAC,OAA3C;eACA,UAAU,CAAC,iBAAX,CAA6B,WAAW,CAAC,OAAzC,EA/CF;;IADY,CAAd;EADe;AAJjB",
  "sourcesContent": [
    "BetokenFund = artifacts.require \"BetokenFund\"\r\nControlToken = artifacts.require \"ControlToken\"\r\nShareToken = artifacts.require \"ShareToken\"\r\n\r\nmodule.exports = (deployer, network, accounts) ->\r\n  deployer.then () ->\r\n    if network == \"development\" || network == \"rinkeby\"\r\n      # Testnet Migration\r\n\r\n      config = require \"../deployment_configs/testnet.json\"\r\n      ETH_TOKEN_ADDRESS = \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"\r\n      TestKyberNetwork = artifacts.require \"TestKyberNetwork\"\r\n      TestToken = artifacts.require \"TestToken\"\r\n      TestTokenFactory = artifacts.require \"TestTokenFactory\"\r\n\r\n      # deploy TestToken factory\r\n      await deployer.deploy(TestTokenFactory)\r\n      TokenFactory = await TestTokenFactory.deployed()\r\n\r\n      # create TestTokens\r\n      testAssetAddr = (await TokenFactory.newToken(\"Test Asset\", \"AST\", 11)).logs[0].args.addr\r\n      testDAIAddr = (await TokenFactory.newToken(\"DAI Stable Coin\", \"DAI\", 18)).logs[0].args.addr\r\n      console.log \"Test asset address: \" + testAssetAddr\r\n      TestAsset = TestToken.at(testAssetAddr)\r\n      TestDAI = TestToken.at(testDAIAddr)\r\n\r\n      # deploy TestKyberNetwork\r\n      await deployer.deploy(TestKyberNetwork, [TestDAI.address, ETH_TOKEN_ADDRESS, TestAsset.address], [1, 600, 1000])\r\n      # mint tokens for KN\r\n      await TestAsset.mint(TestKyberNetwork.address, 1e27)\r\n      await TestDAI.mint(TestKyberNetwork.address, 1e27)\r\n\r\n      # deploy Betoken fund contracts\r\n      await deployer.deploy([ControlToken, ShareToken])\r\n      await deployer.deploy(\r\n        BetokenFund,\r\n        ControlToken.address,\r\n        ShareToken.address,\r\n        TestKyberNetwork.address,\r\n        TestDAI.address,\r\n        accounts[0], #developerFeeAccount\r\n        config.phaseLengths,\r\n        config.commissionRate,\r\n        config.assetFeeRate\r\n        config.developerFeeRate,\r\n        config.exitFeeRate,\r\n        config.functionCallReward,\r\n        \"0x0\"\r\n      )\r\n\r\n      controlToken = await ControlToken.deployed()\r\n      shareToken = await ShareToken.deployed()\r\n      controlToken.transferOwnership(BetokenFund.address)\r\n      shareToken.transferOwnership(BetokenFund.address)\r\n\r\n\r\n"
  ]
}